<%= stylesheet_link_tag    'selectize.bootstrap3', media: 'all', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'selectize', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'plugin', 'data-turbolinks-track' => true %>
<h1 class="x_title">
  <i class="glyphicon glyphicon-leaf titleicon"></i>
  Nómina
</h1>

<%= form_for @operator, url:{action: "paysheet_post"} do |f| %>

  <div class="form-group col-md-12 field">
    <div class="col-md-6">
      <%= f.label :fromdate , "Desde" %>
      <%= f.text_field :fromdate , class:"form-control", value: params[:fromdate] %>
    </div>
    <div class="col-md-6">
      <%= f.label :todate , "Hasta" %>
      <%= f.text_field :todate , class:"form-control", value: params[:todate]%>
      <%= f.text_field :fromdate , class:"form-control"%>
    </div>
    <div class="col-md-6">
      <%= f.label :todate , "Hasta" %>
      <%= f.text_field :todate , class:"form-control"%>
    </div>
  </div>

  <div class="form-group col-md-12 field">
    <div class="col-md-4">
      <%= f.label :companytype , "Empresa prestadora de servicio" %>
      <%= f.select :companytype, Company.all.map { |j|  [ j.name , j.id ]  } , {prompt: "", selected: params[:companytype]}, class:"form-control", multiple: true  %>
    </div>
    <div class="col-md-4">
      <%= f.label :paydate , "Día de pago" %>
      <%= f.text_field :paydate , class:"form-control", value: params[:paydate] %>
      <%= f.select :companytype, Company.all.map { |j|  [ j.name , j.id ]  } , {prompt: ""}, class:"form-control"%>
    </div>
    <div class="col-md-4">
      <%= f.label :paydate , "Día de pago" %>
      <%= f.text_field :paydate , class:"form-control"%>
    </div>
    <div class="col-md-4">
      <%= f.submit "Consultar", :class =>"btn btn-dark"%>
    </div>
  </div>

<% end %>

<h4 class="pull-right">Descargar Excel</h4>
<br>
<br>
<br>
<div style="overflow:auto;max-width:100%" >
<table class="table table-bordered"  cellspacing="0" >
  <thead>
    <tr>
      <th class="active">Cédula</th>
      <th class="active">Nombre</th>
      <th class="active">Cargo</th>
      <th class="active">Básico</th>
      <th class="active">Estado</th>
      <th class="active">Fecha de ingreso</th>
      <th class="active">Fecha de retiro</th>
      <th class="active">Asistencia real</th>
      <th class="active">Asistencia teórica</th>
      <th class="active">Subtotal</th>
      <th class="active">Días a pagar</th>
      <th class="active">Auxilio No prestacional Variable</th>
      <th class="active">Licencias remuneradas</th>
      <th class="active">Licencias no remuneradas</th>
      <th class="active">Licencias ambulatorias</th>
      <th class="active">Licencias ARL</th>
      <th class="active">Faltas injustificadas</th>
      <th class="active">Recargo Nocturno 35%</th>
      <th class="active">Recargo Festivo Diurno S/C 1.75%</th>
      <th class="active">Recargo Festivo Nocturno  S/C 210%</th>
      <th class="active">Recargo Festivo Diurno 0.75%</th>
      <th class="active">Recargo Festivo Nocturno  C/C 110%</th>
      <th class="active">Extras Ordinarias Diurnas 125%</th>
      <th class="active">Extras Ordinarias Nocturnas 1.75%</th>
      <th class="active">Extras Fest Diurnas 200%</th>
      <th class="active">Extras Festivas Nocturnas 250%</th>
      <th class="active">Auxilio de Rodamiento No Prestacional</th>
      <th class="active">Auxilio de Vivienda No Prestacional</th>
      <th class="active">Auxilio de Alimentación No Prestacional</th>
      <th class="active">Sanción</th>
      <th class="active">Licencia Materna/Paterna</th>
      <th class="active">Auxilio Extra Legal Fijo</th>
      <th class="active">Comisión Venta Fijo</th>
      <th class="active">Auxilio de Alimentacion</th>
      <th class="active">Descuento Cliente</th>
      <th class="active">Subsidio de transporte</th>
      <th class="active">Centro de costos</th>
      <th class="active">Días faltantes</th>
    </tr>
  </thead>

  <tbody>
    <% @operators.each do |op| %>
      <% operator = op[1][:operator] %>
      <% if operator.flag == 1 %>
          <tr>
            <td><%= operator.cc %></td>
            <td><%= operator.name  + " " + operator.lastname %></td>
            <td><%= operator.jobs.map { |e| e.name }.join(", ").html_safe %></td>
            <td><%= operator.basepay %></td>
            <td><%= operator.jobs.map { |e| e.basepay }.join(", ").html_safe %></td>
            <td><%= operator.state %></td>

              <% if operator.state == "Activo" %>
                <td><%= operator.dateadmission %></td>
                <td></td>
              <% end %>

              <% if operator.state == "Retirado" %>
                <% if operator.records.where(state: "Reintegrado").order("id desc").first.present? %>
                  <td><%= operator.records.where(state: "Reintegrado").order("id desc").first.reinstatedate %></td>
                  <td><%= operator.records.where(state: "Retirado").order("id desc").first.retirementdate %></td>
                <% else %>
                  <td><%= operator.dateadmission %></td>
                  <td><%= operator.records.where(state: "Retirado").order("id desc").first.retirementdate %></td>
                <% end %>
              <% end %>

              <% if operator.state == "Reintegrado" %>
                <td><%= operator.records.where(state: "Reintegrado").order("id desc").first.reinstatedate %></td>
                <td></td>
              <% end %>

            <% licenciasRemuneradas = op[1][:remuneradas] %>
            <% licenciasNoRemuneradas = op[1][:noRemuneradas] %>
            <% licenciasAmbulatorias = op[1][:ambulatorias] %>
            <% licenciasARL = op[1][:arl] %>
            <% faltasInjustificadas = op[1][:faltasInjustificadas] %>
            <% licenciasAmbulatorias = operator.transcriptions.where(labor_id: Labor.where(code: "970").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% licenciasARL = operator.transcriptions.where(labor_id: Labor.where(code: "980").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% faltasInjustificadas = operator.transcriptions.where(labor_id: Labor.where(code: "990").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% licenciasSoat = operator.transcriptions.where(labor_id: Labor.where(code: "940").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% recargoNoctuno = operator.transcriptions.where(labor_id: Labor.where(code: "919").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% recargoFestivoDiurno = operator.transcriptions.where(labor_id: Labor.where(code: "920").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% recargoFestivoNocturno = operator.transcriptions.where(labor_id: Labor.where(code: "921").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% extraOrdinariaDiurna = operator.transcriptions.where(labor_id: Labor.where(code: "922").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% extraOrdinariaNocturna = operator.transcriptions.where(labor_id: Labor.where(code: "923").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% extraFestivaDiurna = operator.transcriptions.where(labor_id: Labor.where(code: "924").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>
            <% extraFestivaNocturna = operator.transcriptions.where(labor_id: Labor.where(code: "925").first.id).where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.laboramount }.reduce(0,:+).to_i %>

            <td>
              <%= operator.asistance(params[:fromdate].to_date, params[:todate].to_date, operator) %>
            </td>
            <td><%= op[1][:daysEffecty] %></td>
            <td><%= number_to_currency(op[1][:subtotal]) %></td>
            <td><%= op[1][:daysPays] %></td>
            <td><%= number_to_currency(op[1][:extra]) %></td>
            <td>
              <%= Holiday.effectydays(params[:fromdate].to_date, params[:todate].to_date, params[:paydate].to_date, operator, licenciasRemuneradas, licenciasNoRemuneradas, licenciasAmbulatorias, licenciasARL, faltasInjustificadas, licenciasSoat) %>
            </td>

            <td>
              <%= number_to_currency(operator.transcriptions.where(:registerdate => params[:fromdate]..params[:todate]).map { |e| e.subtotal }.reduce(0, :+)) %>
            </td>
            
            <% if operator.transcriptions.map { |e| e.subtotal } != 0 %>
              <td>
                <%= Holiday.paydays(params[:fromdate].to_date, params[:todate].to_date, params[:paydate].to_date, operator, licenciasRemuneradas, licenciasNoRemuneradas, licenciasAmbulatorias, licenciasARL, faltasInjustificadas, licenciasSoat) %>
              </td>
            <% end %>

            <td>
            <%if (operator.records.where(state: "Reintegrado").order("id desc").first.present?)%>
              <%= operator.records.where(state: "Reintegrado").order("id desc").first.reinstatedate  %>
            <%end%>
            <%if operator.records.where(state: "Retirado").order("id desc").first.present?%>
              <%= operator.records.where(state: "Retirado").order("id desc").first.retirementdate  %>
            <%end%>
              <% t=operator.dateadmission  %>
              <%= t.day.to_s + " " + t.strftime("%A") %>
              <%= t.strftime("%Y") %>
            </td>

            <td><%= licenciasRemuneradas %></td>
            <td><%= licenciasNoRemuneradas %></td>
            <td><%= licenciasAmbulatorias %></td>
            <td><%= licenciasARL %></td>
            <td><%= faltasInjustificadas %></td>
            <td><%= licenciasARL + licenciasSoat %></td>
            <td><%= faltasInjustificadas %></td>
            <td><%= recargoNoctuno %></td>
            <td><%= recargoFestivoDiurno %></td>
            <td><%= recargoFestivoNocturno %></td>
            <td></td>
            <td></td>
            <td><%= extraOrdinariaDiurna %></td>
            <td><%= extraOrdinariaNocturna %></td>
            <td><%= extraFestivaDiurna %></td>
            <td><%= extraFestivaNocturna %></td>
            <td><%= operator.vehicleAllowance %></td>
            <td><%= operator.housingAllowance %></td>
            <td><%= operator.feedingAllowance %></td>
            <td><%= operator.sanction %></td>
            <td><%= operator.cc %></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>

            <td><%= op[1][:transport] %></td>

            <% if operator.transportAllowance.present? %>
              <% if operator.transportAllowance == "Completo" %>
                <td><%= @configs[:transportAllowance] %></td>
              <% elsif operator.transportAllowance == "Mitad" %>
                <td><%= @configs[:transportAllowance] / 2 %></td>
              <% elsif operator.transportAllowance == "No aplica" %>
                <td><%= @configs[:transportAllowance] *0 %></td>
              <% end %>
            <% end %>

            <% if operator.billingc.present? %>
              <td><%= operator.billingc.name %></td>
            <% else %>
              <td></td>
            <% end %>

            <td><%= op[1][:missingDays].join(", ").html_safe %></td>


          </tr>
      <% end %>
    <% end %>
    <% @supervisors.each do |supervisor| %>
      <% if supervisor.flag == 1 and supervisor.state!= "Retirado" %>
        <tr>
          <td><%= supervisor.cc %></td>
          <td><%= supervisor.name  + " " + supervisor.lastname %></td>
          <td><%= supervisor.jobs.map { |e| e.name }.join(", ").html_safe %></td>
          <td><%= supervisor.jobs.map { |e| e.basepay }.join(", ").html_safe %></td>
          <td><%= supervisor.state %></td>

            <% if supervisor.state == "Activo" %>
              <td><%= supervisor.dateadmission %></td>
              <td></td>
            <% end %>

            <% if supervisor.state == "Retirado" %>
              <% if supervisor.records.where(state: "Reintegrado").order("id desc").first.present? %>
                <td><%= supervisor.records.where(state: "Reintegrado").order("id desc").first.reinstatedate %></td>
                <td><%= supervisor.records.where(state: "Retirado").order("id desc").first.retirementdate %></td>
              <% else %>
                <td><%= supervisor.dateadmission %></td>
                <td><%= supervisor.records.where(state: "Retirado").order("id desc").first.retirementdate %></td>
              <% end %>
            <% end %>

            <% if supervisor.state == "Reintegrado" %>
              <td><%= supervisor.records.where(state: "Reintegrado").order("id desc").first.reinstatedate %></td>
              <td></td>
            <% end %>

          <% licenciasRemuneradasEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "950").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% licenciasNoRemuneradasEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "960").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% licenciasAmbulatoriasEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "970").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% licenciasARLEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "980").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% faltasInjustificadasEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "990").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% licenciasSoatEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "940").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% recargoNoctunoEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "919").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% recargoFestivoDiurnoEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "920").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% recargoFestivoNocturnoEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "921").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% extraOrdinariaDiurnaEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "922").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% extraOrdinariaNocturnaEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "923").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% extraFestivaDiurnaEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "924").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>
          <% extraFestivaNocturnaEmpleado = supervisor.novelties.where(labor_id: Labor.where(code: "925").first.id).where("registerdate > '" + params[:fromdate].to_s + "' AND registerdate < '" + params[:todate].to_s + " 23:59:59'").map { |e| e.laboramount }.reduce(0,:+).to_i %>

          <td></td>
          <td></td>

          <td><%= number_to_currency(supervisor.novelties.map { |e| e.subtotal }.reduce(0, :+)) %></td>

          <% countdays= %>
          <td>
            <%= 30 - licenciasRemuneradasEmpleado - licenciasNoRemuneradasEmpleado - licenciasAmbulatoriasEmpleado - licenciasARLEmpleado - faltasInjustificadasEmpleado - licenciasSoatEmpleado %>
          </td>

            <td>
              <% t=supervisor.dateadmission  %>
              <%= t.day.to_s + " " + t.strftime("%A") %>
              <%= t.strftime("%Y") %>
            </td>

          <td><%= licenciasRemuneradasEmpleado %></td>
          <td><%= licenciasNoRemuneradasEmpleado %></td>
          <td><%= licenciasAmbulatoriasEmpleado %></td>
          <td><%= licenciasARLEmpleado + licenciasSoatEmpleado %></td>
          <td><%= faltasInjustificadasEmpleado %></td>
          <td><%= recargoNoctunoEmpleado %></td>
          <td><%= recargoFestivoDiurnoEmpleado %></td>
          <td><%= recargoFestivoNocturnoEmpleado %></td>
          <td></td>
          <td></td>
          <td><%= extraOrdinariaDiurnaEmpleado %></td>
          <td><%= extraOrdinariaNocturnaEmpleado %></td>
          <td><%= extraFestivaDiurnaEmpleado %></td>
          <td><%= extraFestivaNocturnaEmpleado %></td>
          <td><%= supervisor.vehicleAllowance %></td>
          <td><%= supervisor.housingAllowance %></td>
          <td><%= supervisor.feedingAllowance %></td>
          <td><%= supervisor.sanction %></td>
          <td><%= supervisor.cc %></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>

          <% if supervisor.transportAllowance.present? %>
            <% if supervisor.transportAllowance == "Completo" %>
              <td><%= @configs[:transportAllowance] %></td>
            <% elsif supervisor.transportAllowance == "Mitad" %>
              <td><%= @configs[:transportAllowance] / 2 %></td>
            <% elsif supervisor.transportAllowance == "No aplica" %>
              <td><%= @configs[:transportAllowance] *0 %></td>
            <% end %>
          <% end %>

          <% if supervisor.billingc.present? %>
            <td><%= supervisor.billingc.name %></td>
          <% end %>

          <td></td>

        </tr>
      <% end %>
    <% end %>
  </tbody>
</table>
</div>

<script>
$('#operator_fromdate').datepicker({ dateFormat:'yy-mm-dd'});
$('#operator_todate').datepicker({ dateFormat:'yy-mm-dd'});
$('#operator_paydate').datepicker({ dateFormat:'yy-mm-dd'});
$("#operator_companytype").selectize({ plugins: ['remove_button'] });

$('#datatable').DataTable({
              "language": {
                "url": "../files/spanish"
            }
  // ajax: ...,
  // autoWidth: false,
  // pagingType: 'full_numbers',
  // processing: true,
  // serverSide: true,

  // Optional, if you want full pagination controls.
  // Check dataTables documentation to learn more about available options.
  // http://datatables.net/reference/option/pagingType
});

</script>